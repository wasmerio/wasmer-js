name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Compile and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup Rust
        uses: dsherret/rust-toolchain-file@v1
      - name: Install Nextest
        uses: taiki-e/install-action@nextest
      - name: Install wasm-pack
        uses: taiki-e/install-action@wasm-pack
      - name: Install wasm-strip and wasm-opt
        run: sudo apt-get update && sudo apt-get install -y wabt binaryen
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Install JS Dependencies
        run: npm ci
      - name: Type Checking
        run: cargo check --workspace --verbose --locked
      - name: Unit Tests
        run: wasm-pack test --headless --firefox
      - name: Build Package
        run: npm run build
      - name: Integration Tests
        run: npm run test

  examples:
    name: Build Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup Rust
        uses: dsherret/rust-toolchain-file@v1
      - name: Install wasm-pack
        uses: taiki-e/install-action@wasm-pack
      - name: Install wasm-strip and wasm-opt
        run: sudo apt-get update && sudo apt-get install -y wabt binaryen
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Install JS Dependencies
        run: npm ci
      - name: Build Package
        run: npm run build
      - name: Build the wasmer.sh Example
        run: |
          npm install
          npm run build
        working-directory: "examples/wasmer.sh"
      - name: Build the Markdown Editor Example
        run: |
          npm install
          pushd markdown-renderer
          cargo build --release --target=wasm32-wasi
          popd
          npm run build
        working-directory: "examples/markdown-editor"
      - name: Build the (Improved) Markdown Editor Example
        run: |
          npm install
          npm run build
        working-directory: "examples/markdown-editor-improved"

  api-docs:
    name: API Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup Rust
        uses: dsherret/rust-toolchain-file@v1
      - name: Install wasm-pack
        uses: taiki-e/install-action@wasm-pack
      - name: Install wasm-strip and wasm-opt
        run: sudo apt-get update && sudo apt-get install -y wabt binaryen
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Install JS Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Generate Docs
        run: npm run docs
      - name: Upload API Docs
        uses: JamesIves/github-pages-deploy-action@v4.4.0
        if: github.ref == 'refs/heads/main'
        with:
          branch: gh-pages
          folder: docs/public
          single-commit: true

  lints:
    name: Linting and Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Setup Rust
        uses: dsherret/rust-toolchain-file@v1
      - name: Check Formatting
        run: cargo fmt --all --verbose --check
      - name: Clippy
        run: cargo clippy --workspace --verbose

  workflow-times:
    name: Workflow Timings
    runs-on: ubuntu-latest
    needs:
      - check
      - examples
    steps:
      - name: Time Reporter
        uses: Michael-F-Bryan/workflow-timer@v0.2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          jobs: |
            Compile and Test
            Build Examples
          message: |
            Make sure you keep an eye on build times!

            The goal is to keep CI times under 10 minutes so developers can maintain a fast edit-compile-test cycle.
