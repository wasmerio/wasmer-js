/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_wasi_free(a: number): void;
export function wasi_new(a: number, b: number): void;
export function wasi_fs(a: number, b: number): void;
export function wasi_getImports(a: number, b: number, c: number): void;
export function wasi_instantiate(a: number, b: number, c: number, d: number): void;
export function wasi_start(a: number, b: number, c: number): void;
export function __wbg_webthreadpoolinner_free(a: number): void;
export function __wbg_webthreadpool_free(a: number): void;
export function worker_entry_point(a: number): void;
export function wasm_entry_point(a: number, b: number, c: number): void;
export function __wbg_jsttystate_free(a: number): void;
export function __wbg_get_jsttystate_cols(a: number): number;
export function __wbg_set_jsttystate_cols(a: number, b: number): void;
export function __wbg_get_jsttystate_rows(a: number): number;
export function __wbg_set_jsttystate_rows(a: number, b: number): void;
export function __wbg_get_jsttystate_width(a: number): number;
export function __wbg_set_jsttystate_width(a: number, b: number): void;
export function __wbg_get_jsttystate_height(a: number): number;
export function __wbg_set_jsttystate_height(a: number, b: number): void;
export function __wbg_get_jsttystate_stdin_tty(a: number): number;
export function __wbg_set_jsttystate_stdin_tty(a: number, b: number): void;
export function __wbg_get_jsttystate_stdout_tty(a: number): number;
export function __wbg_set_jsttystate_stdout_tty(a: number, b: number): void;
export function __wbg_get_jsttystate_stderr_tty(a: number): number;
export function __wbg_set_jsttystate_stderr_tty(a: number, b: number): void;
export function __wbg_get_jsttystate_echo(a: number): number;
export function __wbg_set_jsttystate_echo(a: number, b: number): void;
export function __wbg_get_jsttystate_line_buffered(a: number): number;
export function __wbg_set_jsttystate_line_buffered(a: number, b: number): void;
export function __wbg_get_jsttystate_line_feeds(a: number): number;
export function __wbg_set_jsttystate_line_feeds(a: number, b: number): void;
export function jsttystate___wbgd_downcast_token(): number;
export function jsttystate_new(): number;
export function __wbg_memfs_free(a: number): void;
export function memfs___wbgd_downcast_token(): number;
export function memfs_new(a: number): void;
export function memfs_from_js(a: number, b: number): void;
export function memfs_readDir(a: number, b: number, c: number, d: number): void;
export function memfs_createDir(a: number, b: number, c: number, d: number): void;
export function memfs_removeDir(a: number, b: number, c: number, d: number): void;
export function memfs_removeFile(a: number, b: number, c: number, d: number): void;
export function memfs_rename(a: number, b: number, c: number, d: number, e: number): number;
export function memfs_metadata(a: number, b: number, c: number, d: number): void;
export function memfs_open(a: number, b: number, c: number, d: number, e: number): void;
export function __wbg_jsvirtualfile_free(a: number): void;
export function jsvirtualfile_lastAccessed(a: number): number;
export function jsvirtualfile_lastModified(a: number): number;
export function jsvirtualfile_createdTime(a: number): number;
export function jsvirtualfile_size(a: number): number;
export function jsvirtualfile_setLength(a: number, b: number, c: number): void;
export function jsvirtualfile_read(a: number): number;
export function jsvirtualfile_readString(a: number): number;
export function jsvirtualfile_write(a: number, b: number, c: number, d: number): number;
export function jsvirtualfile_writeString(a: number, b: number, c: number): number;
export function jsvirtualfile_flush(a: number): number;
export function jsvirtualfile_seek(a: number, b: number): number;
export function canonical_abi_realloc(a: number, b: number, c: number, d: number): number;
export function canonical_abi_free(a: number, b: number, c: number): void;
export function __wbg_trap_free(a: number): void;
export function trap___wbgd_downcast_token(): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__Fn__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h2792d391d1328d42(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__he002472b71abbe77(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__hf8e8064efbca9e81(a: number, b: number, c: number, d: number): void;
